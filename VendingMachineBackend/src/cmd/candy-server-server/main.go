// Code generated by go-swagger; DO NOT EDIT.

package main

import (
	"log"
	"os"

	"github.com/go-openapi/loads"
	flags "github.com/jessevdk/go-flags"

	"candy-server/restapi"
	"candy-server/restapi/operations"
)

const (
	caCertPath string = "../../security/server/minica.pem"
	serverCertPath string = "../../security/server/candy.tld/cert.pem"
	serverKeyPath string = "../../security/server/candy.tld/key.pem"
)


// This file was generated by the swagger tool.
// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func main() {

	swaggerSpec, err := loads.Embedded(restapi.SwaggerJSON, restapi.FlatSwaggerJSON)
	if err != nil {
		log.Fatalln(err)
	}

	api := operations.NewCandyServerAPI(swaggerSpec)
	api.BuyCandyHandler = operations.BuyCandyHandlerFunc(operations.BuyCandyHandlerImpl)	
	server := restapi.NewServer(api)
	defer server.Shutdown()

	server.Port = 8888
	server.TLSPort = 8889
	server.Host = "localhost"
	server.TLSHost = "localhost"
	server.TLSCertificate = "../../security/candy.tld/cert.pem"
	server.TLSCertificateKey = "../../security/candy.tld/key.pem"
	server.TLSCACertificate = "../../security/minica.pem"

	parser := flags.NewParser(server, flags.Default)
	parser.ShortDescription = "Candy Server"
	parser.LongDescription = swaggerSpec.Spec().Info.Description
	server.ConfigureFlags()
	for _, optsGroup := range api.CommandLineOptionsGroups {
		_, err := parser.AddGroup(optsGroup.ShortDescription, optsGroup.LongDescription, optsGroup.Options)
		if err != nil {
			log.Fatalln(err)
		}
	}

	if _, err := parser.Parse(); err != nil {
		code := 1
		if fe, ok := err.(*flags.Error); ok {
			if fe.Type == flags.ErrHelp {
				code = 0
			}
		}
		os.Exit(code)
	}

	server.ConfigureAPI()
	

	if err := server.Serve(); err != nil {
		log.Fatalln(err)
	}

}

